[conf]
; core/conf/tools/args_parse/others.rs
summary_file = records/record

; core/conf/tools/args_parse/receiver.rs
default_output_mod = csv

; core/conf/tools/args_parse/sender.rs
default_send_attempt_num = 10
default_source_ports = 30000-60000
default_probe_mod_v4 = icmp_v4
default_probe_mod_v6 = icmp_v6
default_batch_size = 100
default_must_sleep = 0
default_cool_time = 8

; core/conf/tools/args_parse/target_iterator.rs
default_ports = 0

; modules/output_modules/csv.rs
output_file_pattern_v4 = result/%Y_%m_%d__%H_%M_%S_v4.csv
output_file_pattern_v6 = result/%Y_%m_%d__%H_%M_%S_v6.csv
# 1M
default_output_buffer_capacity = 1048576

; receiver
active_check_count = 1000
capture_timeout = 10
# 128M  128 × 1024 × 1024
pcap_recv_buffer_size = 134217728

; sender
get_socket_attempts = 600
attempt_sleep_millis = 1000

; pid send_rate controller
kp = 0.8
ki = 0.02
ki_limit = 0.05
kd = 0.1

; tools/blocker/ipv4_blocker/
destination_black_list_v4 = block_list/destination_address/blacklist_v4.txt
destination_white_list_v4 = block_list/destination_address/whitelist_v4.txt

source_black_list_v4 = block_list/source_address/blacklist_v4.txt
source_white_list_v4 = block_list/source_address/whitelist_v4.txt

; tools/blocker/ipv6_blocker/
destination_black_list_v6 = block_list/destination_address/blacklist_v6.txt
destination_white_list_v6 = block_list/destination_address/whitelist_v6.txt

source_black_list_v6 = block_list/source_address/blacklist_v6.txt
source_white_list_v6 = block_list/source_address/whitelist_v6.txt

; modules/target_iterators/read_from_file/read_target_file.rs
fallback_bytes = 60
max_read_buf_bytes = 1048576

; probe modules
default_payload_file = probe_modules_payload/default_payload_file.txt

; 6Asset
asset6_port2id = others/asset6/port2id.txt
asset6_id2port = others/asset6/id2port.txt

; pmap
pmap_default_ports = *
pmap_default_probe_mod_v4 = tcp_syn_scan_v4
pmap_default_probe_mod_v6 = tcp_syn_scan_v6
pmap_sampling_pro = 0.1
pmap_min_sample_num = 10
pmap_budget = 30
pmap_batch_num = 10
pmap_allow_graph_iter = false
pmap_use_hash_recorder = true
pmap_port_num_limit = 50

; topo(4/6)
# max_ttl <= 64
topo_max_ttl = 32
topo_dest_port = 33433
topo_payload = hello

; topo4
topo4_rand_bits = 0
topo4_default_probe_mod = topo_udp_v4

; topo6
topo6_rand_bits = 0
topo6_default_probe_mod = topo_udp_v6

; ipv6 space tree
default_code_probe_mod_v6 = code_icmp_v6
space_tree_type = density
batch_size = 100000
divide_range = 1-128
max_leaf_size = 16
no_allow_gen_seeds = true
no_allow_gen_seeds_from_file = false
region_extraction_num = 1000
seeds_num = 10000000

budget = 200000000
divide_dim = 4
learning_rate = 0.1

default_asset6_probe_mod = code_tcp_syn_scan_v6

; ipv6 prefix tree
max_prefix_len = 64
min_prefix_len = 48
threshold = 0
extra_node_num = 10000
initial_ttl = 16
gap_limit = 3
prefix_tree_max_ttl = 32
min_target_num = 0
allow_leaf_expand = true
allow_layer_expand = true
layer_expand_ratio = 0.1
split_node_select_type = cascade
rand_ord = false
child_max_size = 16

allow_supplement_scan = false

; ipv6 aliased prefixes check
prefix_len = 64
prefix_count = 1000000
rand_addr_len = 16
aliased_threshold = 0.8
output_alia_addrs = false
prefixes_len_per_batch = 1000000
# leave blank means not saving
not_aliased_records_path =
aliased_prefixes_path =

; tree trace
default_code_topo_probe_mod_v6 = code_topo_icmp_v6

; asset6
aliased_prefixes_check = true
port_entropy_mul = 2.0

[log]
; core/sys/logger.rs
# https://docs.rs/log4rs/*/log4rs/encode/pattern/index.html
log_pattern = {h({d(%Y-%m-%d %H:%M:%S %Z)(local)} {l} {m})}{n}
log_name_pattern = %Y_%m_%d__%H_%M_%S.log

[err]
; mode
recv_ready_receive_failed = Main thread failed to receive ready signal from receive thread
send_thread_err = Error occurred while executing send thread
send_recv_close_time_failed = Main thread failed to send stop time to receive thread
recv_thread_err = Error occurred while executing receive thread

; sender
get_socket_failed = Send thread failed to get socket, please confirm it's started with administrator privileges
bind_failed = Send thread failed to bind to specified network interface
io_message_disabled = Unable to enable I/O completion notification
sender_set_nonblock = Send thread failed to set non-blocking mode

; sender windows
open_pcap_sender_failed = Failed to start Pcap sender, please confirm it's started with administrator privileges
create_send_queue_failed = Failed to create send queue

; receiver
recv_ready_send_failed = Receive thread failed to send ready signal to main thread
receiver_set_nonblock = Packet capture failed to set non-blocking mode
open_capture_failed = Failed to start packet capture, please confirm it's started with administrator privileges
data_link_type_not_supported = Data link layer type of current network interface is not supported, current type is:
set_filter_failed = Failed to set filtering rules for packet capture, current filtering rules are:

; core/sys/logger.rs
log_file_directory_both_exist = Cannot specify log file and log directory at the same time

; core/conf/tools/args_parse/ip/ipv4.rs
parse_ipv4_range_err = Failed to parse IPv4 address range, note the left boundary must be less than or equal to the right boundary, and cannot contain multiple separators (-), current failed target range:

; core/conf/tools/args_parse/ip/ipv6.rs
parse_ipv6_range_err = Failed to parse IPv6 address range, note the left boundary must be less than or equal to the right boundary, and cannot contain multiple separators (-), current failed target range:

; core/conf/tools/args_parse/ip/ipv6_binary_pattern.rs
parse_ipv6_binary_pattern_err = Failed to parse IPv6 binary pattern string, current pattern string is:

; core/conf/tools/args_parse/ip/ipv6_pattern.rs
parse_ipv6_pattern_err = Failed to parse IPv6 pattern string, current pattern string is:
ipv6_pattern_local_part_err = Error parsing local fragment of IPv6 pattern string, note the starting index of current fragment must be greater than ending index of previous fragment, and each parameter must be valid, no multiple separators, failed local range:
ipv6_pattern_bits_for_ip_invalid = Pattern bits in IPv6 pattern string exceed 64 bits, or pattern bits do not exist

; core/conf/tools/args_parse/ip/ipv4_pattern.rs
parse_ipv4_pattern_err = Failed to parse IPv4 pattern string, current pattern string is:
ipv4_pattern_local_part_err = Error parsing local fragment of IPv4 pattern string, note the starting index of current fragment must be greater than ending index of previous fragment, and each parameter must be valid, no multiple separators, failed local range:
ipv4_pattern_bits_for_ip_invalid = Pattern bits in IPv4 pattern string exceed 32 bits, or pattern bits do not exist

; core/conf/tools/args_parse/port.rs
parse_ports_range_err = Failed to parse port range, note the left boundary must be less than or equal to the right boundary, and cannot contain multiple separators (-), current failed port range:

parse_u8_range_err = Failed to parse u8 data range, note the left boundary must be less than or equal to the right boundary, and cannot contain multiple separators (-), current failed u8 data range:

; core/conf/tools/args_parse/sender.rs
send_thread_num_not_zero = Number of send threads cannot be set to 0
get_thread_num_failed = Failed to get number of system threads
rate_bandwidth_both_exist = Can only choose one between send rate and send bandwidth
input_end_time_err = Error occurred while inputting expected end time
parse_end_time_err = Failed to parse expected end time
parse_band_width_err = Failed to parse bandwidth string, current bandwidth string is:
send_time_invalid = Send thread running time must be greater than 0 (send running time = total time - cool time)
rate_invalid = Set send rate is invalid
tar_num_over_range = Probe target range exceeded, product of number of target IPs and ports should be less than 2^64
source_ips_not_exist_v4 = No valid IPv4 source address exists, please check network condition or add exclusions to source address whitelist
source_ips_not_exist_v6 = No valid IPv6 source address exists, please check network condition or add exclusions to source address whitelist

; core/conf/tools/args_parse/target_iterator.rs
target_ips_not_exist = Target IP address is not set, or no valid IP address is read
number_of_target_ipv6_addresses_out_of_range = Number of target IPv6 addresses out of range (max continuous range is 2^(64)-1, max binary mode bits is 64 bits)
targets_file_not_exist = Probe target file is not set
assign_threads_failed = Error occurred while assigning number of threads for IPv4 and IPv6 send threads
threads_num_less_than_two = Number of send threads is less than 2, mixed mode requires CPU threads above 3

; core/conf/tools/net/interface.rs
gateway_info_not_found = Unable to obtain gateway information corresponding to network interface, network interface name:
local_mac_not_found = Unable to obtain local hardware address (MAC) of network interface, network interface name:

; core/conf/modules_config.rs
get_parameter_failed = Failed to get specified custom parameter, target parameter name:
convert_parameter_failed = Failed to convert specified custom parameter type, target parameter name:
mod_arg_invalid = Custom parameter is invalid, please follow the format of parameter name=parameter value

; modules/probe_modules/probe_mod_v4.rs
v4_probe_mod_not_exist = Target IPv4 probe module does not exist, or is not activated

; modules/probe_modules/probe_mod_v6.rs
v6_probe_mod_not_exist = Target IPv6 probe module does not exist, or is not activated

; modules/output_modules/
output_mod_not_exist = Specified output module does not exist, or is not activated

; modules/output_modules/csv.rs
output_file_not_found = Output module did not find valid output path
open_output_file_failed = Output module failed to open target path, target path:
output_flush_failed = Output module failed to clear buffer, may cause abnormalities at end of output
output_write_record_failed = Output module failed to write data

; tools/net_handle/net_interface/interface.rs
interface_not_found = Specified network interface not found, network interface name:
default_interface_not_found = Unable to obtain default network interface

; tools/net_handle/net_type/net_v4.rs
ipv4_net_invalid = IPv4 network address mask is invalid, relevant address and mask are respectively:
parse_ipv4_net_failed = Failed to parse IPv4 network from string, relevant IPv4 network string is:

; tools/net_handle/net_type/net_v6.rs
ipv6_net_invalid = IPv6 network address mask is invalid, relevant address and mask are respectively:
parse_ipv6_net_failed = Failed to parse IPv6 network from string, relevant IPv6 network string is:

; tools/others/parse.rs
parse_str_failed = Failed to parse string to target format, value of string is:

; cycle group
index_invalid = Multiplicative cyclic group range index is illegal, must ensure starting index is less than or equal to ending index, and all indexes are within range 1-(p-1)
cycle_group_not_found = No suitable multiplicative cyclic group found
p_too_big = Modulus of multiplicative cyclic group is too large, unable to convert to u64 type
get_prim_root_err = Error occurred when generating primitive root
u64_to_big_num_err = In relevant calculation of multiplicative cyclic group, u64 type cannot be smoothly converted to big number type
big_num_to_u64_err = In relevant calculation of multiplicative cyclic group, big number type cannot be smoothly converted to u64 type
u128_to_big_num_err = In relevant calculation of multiplicative cyclic group, u128 type cannot be smoothly converted to big number type
big_num_to_u128_err = In relevant calculation of multiplicative cyclic group, big number type cannot be smoothly converted to u128 type

; tools/blocker/ipv4_blocker/ipv4_blocker.rs   tools/blocker/ipv6_blocker/ipv6_blocker.rs
open_black_white_list_file_err = Unable to open blacklist or whitelist file
read_black_white_list_file_err = Error occurred when reading blacklist or whitelist file
parse_line_err = Error occurred when parsing blacklist/whitelist or network prefix entry, the entry that caused the error is:
illegal_all_flag = Illegal all domain mark appeared in blacklist/whitelist entry, when mask is 0, address must be 0, the entry that caused the error is:

; bit_map
bitmap_u64_to_usize_err = Failed to create bitmap, u64 type cannot be safely converted to usize type, please note: this program does not support operating systems below 64 bits
bitmap_get_target_failed = Failed to get bitmap element of specified index, current index being searched is:
pattern_char_over_64 = Number of pattern characters in IPv6 pattern string exceeds 64 bits, please note: maximum number of pattern characters in IPv6 pattern string is 64
total_bits_num_over_63 = Total number of bits required for target range exceeds 63, please reduce target address range or target port range

; tools/file/write_to_file.rs
write_record_err = Error occurred while writing record information (scan configuration, probe results)
del_record_file_err = Error occurred while deleting record file
input_record_option_err = Error occurred while inputting record file option
create_record_file_err = Error occurred while creating record file, current record file path:
serialize_args_failed = Failed to serialize input parameters

; modules/target_iterators/read_from_file/read_target_file.rs
open_targets_file_failed = Failed to open target file, file path:
seek_file_failed = Target file pointer operation failed, byte index and file path are respectively:
read_target_line_failed = Failed to read target file by line, file path:
get_target_file_info_failed = Failed to obtain target file metadata, file path:
target_file_index_invalid = Target file byte index is invalid, file path:
parse_targets_file_name_failed = Failed to obtain additional information from target file name, file path:
assign_by_num_failed = Allocation by target number failed, please check if the target number is correct

; modules/target_iterators/read_from_file/v6/ipv6_reader.rs
; modules/target_iterators/read_from_file/v4/ipv4_reader.rs
read_cur_target_failed = Failed to read current line of target file

; probe_modules
tar_ports_not_match_net_layer = When sending network layer packets, the port must be specified as 0, and multiple target ports cannot be entered

; core/sender/tools/source_ip_iter/source_ip_v4.rs
source_ips_is_null_v4 = IPv4 source address is empty, if the network interface exists or the source address is set, please check if the source address is an invalid address such as a private address

; core/sender/tools/source_ip_iter/source_ip_v6.rs
source_ips_is_null_v6 = IPv6 source address is empty, if the network interface exists or the source address is set, please check if the source address is an invalid address such as a private address

; udp
not_check_sport_parse_failed = Failed to parse not_check_sport parameter, note that the parameter should be true or false

; modules/probe_modules/tools/payload.rs
payload_args_invalid = Payload parameter is invalid, please follow the rules: native:target payload name or file:target payload name or bytes:payload byte vector, incorrect payload parameter:
payload_invalid = Module payload does not meet length and other restrictions
payload_byte_parse_failed = Payload parsing failed, incorrect payload information:
open_payload_file_failed = Failed to open payload file, file path:
match_payload_failed = Failed to find specified payload or an error occurred during reading, current target payload name and file path are respectively:

; tools/file/get_path.rs
get_install_path_failed = Unable to obtain the path of the current installation file
create_cur_parent_path_failed = Failed to create the parent folder of the target file, parent folder:
get_tar_path_failed = Failed to obtain the target path

; pmap
probe_not_use_ports = The target probe module does not use ports, please select a probe module that uses ports
sampling_pro_invalid = Sampling ratio is invalid, note that it should be a floating point number between (0.0, 1.0]
get_graph_arc_failed = Failed to obtain the atomic pointer of the probability-related graph, please check if there is an abnormal reference
tar_ports_index_err = All ports have been traversed, but ports are still requested to be recommended. Please check the code execution logic
get_ip_struct_failed = Unable to obtain the corresponding ip_struct

; topo
topo_payload_len_err = Payload length does not meet the requirement, and automatic padding is prohibited
topo_max_ttl_err = The maximum TTL must not exceed 64

use_time_encoding_parse_failed = Failed to parse use_time_encoding parameter, note that the parameter should be true or false
print_default_ttl_parse_failed = Failed to parse print_default_ttl parameter, note that the parameter should be true or false
topo_dest_port_parse_failed = Failed to parse topo_dest_port parameter, note that the parameter should be u16
topo_payload_parse_failed = Failed to parse topo_payload parameter, note that the parameter should be string
topo_payload_allow_repeat_parse_failed = Failed to parse topo_payload_allow_repeat parameter, note that the parameter should be true or false
topo_allow_tar_network_respond_parse_failed = Failed to parse topo_allow_tar_network_respond parameter, note that the parameter should be true or false
topo_allow_port_unreach_parse_failed = Failed to parse topo_allow_port_unreach parameter, note that the parameter should be true or false

; ipv6 space tree
ipv6_space_tree_divide_dim_err = The division dimension of the IPv6 space tree should be:
ipv6_space_tree_range_err = IPv6 address split range is invalid (format: starting position-ending position), it should be between 1 and 128, the starting index is less than the ending index, and it is an integer multiple of the division dimension
ipv6_space_tree_max_leaf_size_err = The minimum upper limit of the number of IPv6 address space tree clustering regions should be greater than or equal to 2
ipv6_space_tree_no_entropy_err = No non-zero entropy value when obtaining the split point of the IPv6 address space tree, please check if there are duplicate addresses

ipv6_space_tree_no_exist = This IPv6 space tree type is not currently supported

get_child_move_len_err = An error occurred when obtaining the division dimension of the child node, unable to find the split dimension in the division dimension of the parent node
root_not_found = An error occurred when obtaining the node queue, the root node of the tree is empty
ipv6_space_tree_region_extraction_num_err = The maximum number of region extractions should be less than or equal to 2^24-1

; ipv6 prefix tree
ipv6_tree_max_prefix_len_err = The maximum prefix length of the IPv6 prefix tree must be greater than 1, less than or equal to 128, and divisible by the division dimension
ipv6_prefix_split_type_not_found = The split point selection method does not exist

; ipv6 aliased prefixes check
ipv6_alia_prefix_len_err = The set prefix length cannot be greater than or equal to 128
ipv6_alia_rand_count_err = The number of random addresses generated per prefix cannot exceed 256
prefixes_len_per_batch_over = The number of prefixes probed per batch should be less than 2^24-1
alia_threshold_err = Aliased prefix threshold is too low or too high, please ensure that the product of the number of random addresses per prefix and the aliased threshold ratio is greater than or equal to 1, and less than or equal to the number of random addresses per prefix

; tcp code probe
code_len_4 = The custom encoding length must be 4 bytes

[warn]
; core/conf/tools/args_parse/sender.rs
max_rate = The rate or bandwidth is not specified, and the total number of probe targets cannot be obtained, it will probe at the maximum rate (u64::MAX)

; sender windows
batch_size_reset = The batch_size of the send thread exceeds the maximum value of u32::MAX, batch_size will be forcibly set to u32::MAX

; help mode
no_mode = You have not specified any mode or the specified mode is invalid, please use --mode to specify the mode, or use --mode_help, --probe_v4_help, --probe_v6_help, --output_help plus the module name to view the corresponding help information, the following are all supported module names (the same module may have different names):

; tools/file/write_to_file.rs
record_file_header_not_match = The record file fields do not match, if you continue, please enter yes, this will delete the original record file and create a new record file, entering any other character will end the program

; modules/target_iterators/file_reader/v4/ipv4_file_reader.rs
file_line_invalid = The data read from the file is illegal, the current data:

; tools/file/parse_context.rs
wc_l_failed = Failed to execute the wc -l command to get the number of file lines, file path:

; core/conf/tools/args_parse/target_iterator.rs
target_ports_not_exist = The target port is not set, the default target port will be used (* means all ports):

; core/conf/tools/args_parse/sender.rs
ignored_source_ip = Ignored invalid source address:

[info]
; ipv6 addrs gen
ipv6_space_tree_instantiation = Instantiate space tree
cur_round = Current round:
cur_active_num = Number of active addresses in current round:

start_scan = Start scanning, number of targets:
cur_no_split_node_num = Current total number of nodes (excluding current split nodes):
cur_split_node_num = Current total number of split nodes:

topo_round = Topology detection round:
tar_num = Current number of targets:

seeds_num = Total number of seeds:
hier_extension_ind = Hierarchical expansion index:

start_supplement_scan = Start supplementary scan

; ipv6 aliased prefixes check
alia_checker_recv_finished = The receive thread has stopped, the number of aliased prefixes found, the total number of prefixes, the number of aliased addresses (if it is not allowed to output aliased addresses, this item will be set to 0. Please note that there should be no duplicate addresses in the input file, otherwise it will be counted and output repeatedly!), the total number of successful sends, the total number of failed sends, and the number of unique response addresses are respectively:
aliased_prefixes_count = Total number of aliased prefixes:
not_alia_records_count = Total number of non-aliased record entries:

[debug]
syslog_on = Terminal log has been turned on

; send
send_failed = Packet send failed, the address (and port [may not be specified]) of the current target are respectively:

; sender windows
send_queue_failed = Queue send failed, current total number of send failures:

[trace]

[print]
syslog_off = Terminal log has been turned off

; core/conf/tools/args_parse/sender.rs
input_end_time = Please enter the expected end time, for example: 2023-10-26 21:15:00+08:00

; help mode
print_modes = The following are all supported mode names:
print_probe_v4_modules = The following are all supported IPv4 probe module names:
print_probe_v6_modules = The following are all supported IPv6 probe module names:
print_output_modules = The following are all supported output module names:
install_path_info = Current program installation path:

; mode
send_finished = All send threads have stopped, the cumulative number of successful sends, the cumulative number of failed sends, and the number blocked by the blacklist are respectively:

recv_finished_with_out_of_range = The receive thread has stopped, the number of successful receives, the number of duplicates and out-of-range targets, and the number that passed verification but were not successfully probed are respectively:
recv_finished = The receive thread has stopped, the number of successful receives, the number of duplicates, and the number that passed verification but were not successfully probed are respectively:
show_running_time = Running time:
running_time_pattern = {d} days {h} hours {m} minutes {s} seconds

recv_finished_mix = The receive thread has stopped, the number of successful receives (IPv4), the number of duplicates (IPv4), the number that passed verification but were not successfully probed (IPv4), the number of successful receives (IPv6), the number of duplicates (IPv6), and the number that passed verification but were not successfully probed (IPv6) are respectively:

; core/conf/tools/args_parse/sender.rs
forecast_completion_time = Estimated completion time:
forecast_completion_time_pattern = %Y-%m-%d %H:%M:%S

; pmap
pmap_scan_finished = Pmap detection ended, the number of IP addresses with active ports and the total number of active port pairs are respectively:

; ipv6 addrs gen
ipv6_addrs_gen_finished = IPv6 target generation algorithm detection ended, the hit rate, the total number of active targets (addresses or address-port pairs), the total number of successful sends, and the total number of failed sends are respectively:
ipv6_addrs_gen_finished_con_aliased = Including aliased detection, the hit rate, the total number of active targets (addresses or address-port pairs), the total number of successful sends, and the total number of failed sends are respectively:

; ipv6 prefix gen
ipv6_prefixes_gen_finished = IPv6 active topology generation algorithm ended, the total number of discovered topology node addresses / the total number of packets sent, the total number of discovered topology node addresses, the total number of successful sends, and the total number of failed sends are respectively:
ipv6_prefix_tree_cur_info = This round of detection ended, currently the total number of discovered topology node addresses / the total number of packets sent, the total number of discovered topology node addresses, the total number of successful sends, and the total number of failed sends are respectively:

[help]
; mode
CycleV4 = IPv4 multiplicative cyclic group mode, iterative method, the detection method is consistent with zmap_v4

CycleV6 = IPv6 multiplicative cyclic group mode, v6 version of zmap

CycleV6Pattern = IPv6 pattern string multiplicative cyclic group mode, supports two formats: binary string format and ipv6@a-b,c

CycleV4V6 = IPv4 IPv6 hybrid multiplicative cyclic group mode, supports subnets, ranges, single addresses, does not support IPv6 pattern strings

V6FileReader = Use IPv6 file as IPv6 iterator source, each line in the file is an ipv6 address or ipv6 address|port, you can also manually define the destination port, at which point the port in the file will be invalid. The file name can use target number: _num(\d+)_ minimum IP value: _min(\d+)_ maximum IP value _max(\d+)_ and other identifiers to optimize scanning

V4FileReader = Use IPv4 file as IPv4 iterator source, each line in the file is an ipv4 address or ipv4 address|port, you can also manually define the destination port, at which point the port in the file will be invalid. The file name can use target number: _num(\d+)_ minimum IP value: _min(\d+)_ maximum IP value _max(\d+)_ and other identifiers to optimize scanning

PmapV4 = pmap_v4 version, full network port scanning tool, supports IPv4 range or subnet format input. Custom parameters are: pre-scan ratio:pmap_sampling_pro, minimum number of pre-scan probed addresses: pmap_min_sample_num, recommended rounds:pmap_batch_num, budget:pmap_budget, whether to allow probability-related graph iteration:pmap_allow_graph_iter, use hash recorder (applicable when the target range is large and the recommended rounds are many):pmap_use_hash_recorder. Note: In this mode, all modules will be forced to start source port checking

PmapV6 = pmap_v6 version, full network port scanning tool, supports IPv6 pattern string input. Custom parameters are: pre-scan ratio:pmap_sampling_pro, minimum number of pre-scan probed addresses: pmap_min_sample_num, recommended rounds:pmap_batch_num, budget:pmap_budget, whether to allow probability-related graph iteration:pmap_allow_graph_iter, use hash recorder (applicable when the target range is large and the recommended rounds are many):pmap_use_hash_recorder. Note: In this mode, all modules will be forced to start source port checking

Topo4 = IPv4 topology detection mode, custom parameters: topo_max_ttl:maximum ttl (initial ttl used during pre-scan), topo_sub_probe_v4: auxiliary pre-scan module, generally topo_icmp_v4, topo4_rand_bits:IPv4 pattern string random bit position, use random bits to replace the specified position (fixed part) in the pattern string

Topo6 = IPv6 topology detection mode, custom parameters: topo_max_ttl:maximum ttl (initial ttl used during pre-scan), topo_sub_probe_v6: auxiliary pre-scan module, generally topo_icmp_v6, topo6_rand_bits:IPv6 pattern string random bit position, use random bits to replace the specified position (fixed part) in the pattern string

SpaceTree6 = IPv6 address generation and detection algorithm based on address space tree, custom parameters: space_tree_type: space tree type, budget: total budget, batch_size:number of addresses per round, divide_dim:division dimension, divide_range:split region, max_leaf_size:upper limit of the number of addresses in the clustering region, no_allow_gen_seeds:do not allow generating seed addresses (but can generate other addresses in the input file that are not used as seed addresses), learning_rate:learning rate, region_extraction_num:number of region extractions, seeds_num:number of seeds, no_allow_gen_seeds_from_file:do not allow generating any addresses in the input file, if this item is true, no_allow_gen_seeds will be forced to true

PrefixTree6 = IPv6 prefix tree, active topology generation and detection algorithm

PrefixFixedTree6 = IPv6 prefix tree that is divided according to a fixed dimension

IPv6AliasedCheck = IPv6 aliased prefix detection, custom parameters: prefix_len, prefix_count, rand_addr_len, aliased_threshold, output_alia_addrs

PmapFileV6 = PmapV6 in file input form, each file is treated as an IPv6 network

Asset6 = IPv6 port pair generation and detection algorithm.

Scour6 = IPv6 large-scale routing interface discovery algorithm.

; ipv4 probe
IcmpEchoV4 = Probe module that sends ICMP_V4 echo request to the host. Please use -a payload=file:target payload name or -a payload=bytes:[1,2,3,*] to specify the payload array, the * character will be replaced with a random value. If no payload parameter is specified, the ICMP data part will be empty

TcpSynAckScanV4 = IPv4 probe module that sends TCP SYN ACK packets to specific ports.

TcpSynOptV4 = IPv4 TCP SYN probe module with options, please use -a payload=file:target payload name or -a payload=bytes:[1,2,3,*] to specify the payload array, the * character will be replaced with a random value. If no payload parameter is specified, or the payload is empty, an error will be reported

TcpSynScanV4 = Probe module that sends TCP SYN packets to specific ports.

UdpScanV4 = Probe module that sends UDP packets to IPv4 hosts. Please use -a payload=file:target payload name or -a payload=bytes:[1,2,3,*] to specify the payload array, the * character will be replaced with a random value, -a not_check_sport=true or false to specify whether to check the source port, the default is true, that is, not to check the source port

TopoUdpV4 = IPv4 topology UDP probe module, custom parameters: use_time_encoding: whether to use timestamp encoding, print_default_ttl: whether to print the default TTL of the target host, topo_allow_tar_network_respond: whether to acknowledge destination unreachable messages (allow the target network to reply with destination unreachable messages), topo_dest_port: UDP destination port, topo_payload: UDP payload message, topo_payload_allow_repeat: allow repeated payload messages to a sufficient length

TopoIcmpV4 = IPv4 topology ICMP probe module, custom parameters: use_time_encoding: whether to use timestamp encoding, print_default_ttl: whether to print the default TTL of the target host, topo_allow_tar_network_respond: whether to acknowledge destination unreachable messages (allow the target network to reply with destination unreachable messages)

TopoTcpV4 = IPv4 topology TCP probe module, custom parameters: topo_tcp_use_ack: whether to use syn_ack, if not, use syn, use_time_encoding: whether to use timestamp encoding, print_default_ttl: whether to print the default TTL of the target host, topo_allow_tar_network_respond: whether to acknowledge destination unreachable messages (allow the target network to reply with destination unreachable messages), topo_dest_port: TCP destination port

; ipv6 probe
IcmpEchoV6 = Probe module that sends ICMP_V6 echo request to the host.

TcpSynAckScanV6 = IPv6 probe module that sends TCP SYN ACK packets to specific ports.

TcpSynOptV6 = IPv6 TCP SYN probe module with options, please use -a payload=file:target payload name or -a payload=bytes:[1,2,3,*] to specify the payload array, the * character will be replaced with a random value. If no payload parameter is specified, or the payload is empty, an error will be reported

TcpSynScanV6 = Probe module that sends TCP SYN packets to specific ports.

UdpScanV6 = Probe module that sends UDP packets to IPv6 hosts. Please use -a payload=file:target payload name or -a payload=bytes:[1,2,3,*] to specify the payload array, the * character will be replaced with a random value, -a not_check_sport=true or false to specify whether to check the source port, the default is true, that is, not to check the source port

TopoUdpV6 = IPv6 topology UDP probe module, custom parameters: use_time_encoding: whether to use timestamp encoding, print_default_ttl: whether to print the default TTL of the target host, topo_allow_tar_network_respond: whether to acknowledge destination unreachable messages (allow the target network to reply with destination unreachable messages), topo_dest_port: UDP destination port, topo_payload: UDP payload message, topo_payload_allow_repeat: allow repeated payload messages to a sufficient length

TopoIcmpV6 = IPv6 topology ICMP probe module, custom parameters: use_time_encoding: whether to use timestamp encoding, print_default_ttl: whether to print the default TTL of the target host, topo_allow_tar_network_respond: whether to acknowledge destination unreachable messages (allow the target network to reply with destination unreachable messages)

TopoTcpV6 = IPv6 topology TCP probe module, custom parameters: topo_tcp_use_ack: whether to use syn_ack, if not, use syn, use_time_encoding: whether to use timestamp encoding, print_default_ttl: whether to print the default TTL of the target host, topo_allow_tar_network_respond: whether to acknowledge destination unreachable messages (allow the target network to reply with destination unreachable messages), topo_dest_port: TCP destination port

CodeIcmpEchoV6 = IPv6 ICMP active probe module that supports custom encoding

CodeTcpSynScanV6 = IPv6 TCP active probe module that supports custom encoding, note that the encoding can only be 4 bytes

; modules/output_modules/csv.rs
Csv = CSV output module, saves results in CSV file format